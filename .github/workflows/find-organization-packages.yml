# This workflow will create a list of all Maven packages for the specified Organization
# 1. The workflow will trigger by the creation of an issue with the label "start-migration"
# 2. It will use the GitHub CLI to access the GitHub API and get a list of all Maven packages
# 3. It will use the repository secret FROM_ORG_PAT to access the GitHub API

name: Get Maven Packages

on:
    issues:
        types: [labeled]
  
jobs:
  get-packages:
    if: github.event.label.name == 'start-migration'
    runs-on: ubuntu-latest
    permissions:
      issues: write

    outputs:
      packages: ${{ steps.org-packages.outputs.packages }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Get values from Issue form
        id: get-values
        run: |
          FROM_ORG=$(echo "${{ github.event.issue.body }}" | awk '/### Source Organization Name/{getline; getline; print}')
          echo "from-org=$FROM_ORG" >> "$GITHUB_OUTPUT"
          echo "from-org=$FROM_ORG" >> "$GITHUB_STEP_SUMMARY"
          TO_ORG=$(echo "${{ github.event.issue.body }}" | awk '/### Destination Organization Name/{getline; getline; print}')
          echo "to-org=$TO_ORG" >> "$GITHUB_OUTPUT"
          echo "to-org=$TO_ORG" >> "$GITHUB_STEP_SUMMARY"
        shell: bash

      - name: Get Maven Packages
        uses: ./.github/actions/create-asset-download-lists-by-package
        id: org-packages
        with:
          from-org: ${{ steps.get-values.outputs.from-org }}
          from-org-pat: ${{ secrets.FROM_ORG_PAT }}
          to-org: ${{ steps.get-values.outputs.to-org}}
          to-org-pat: ${{ secrets.TO_ORG_PAT }}

      - name: Add JSON files to cache
        uses: actions/cache@v4.0.1
        with:
          key: |
            ${{ github.workflow }}-${{ github.run_id }}-${{ github.run_attempt }}-json
          path: |
            *.json
          save-always: true
      
      - name: Generate task list and update issue
        run: |
          echo "## Migration Task List" >> task-list.md
          echo "" >> task-list.md
          echo '${{ steps.org-packages.outputs.packages }}' | jq -r '.[] | "- [ ] " + .name' >> task-list.md
          gh issue edit ${{ github.event.issue.number }} --body "$(cat task-list.md)"
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add list to job summary
        run: |
          echo "Maven Packages" >> $GITHUB_STEP_SUMMARY
          echo "-------------" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.org-packages.outputs.packages }}" >> $GITHUB_STEP_SUMMARY
  
  # upload-assets:
  #   needs: get-packages
  #   runs-on: ubuntu-latest

  #   strategy:
  #       matrix:
  #         pkg: ${{fromJson(needs.get-packages.outputs.packages)}}

  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4

  #     # retrieve cache
  #     - name: Restore JSON files from cache
  #       uses: actions/cache@v4.0.1
  #       with:
  #         key: |
  #           ${{ github.workflow }}-${{ github.run_id }}-${{ github.run_attempt }}-json
  #         path: |
  #           *.json
  #         fail-on-cache-miss: true
            
  #     - name: Read package ${{ matrix.pkg.name }} 
  #       run: |
  #         echo "Ready to migrate: ${{ matrix.pkg.toOwnerRepoExists }}"
  #         echo "Reading from file ${{ matrix.pkg.file }}"
  #         cat ${{ matrix.pkg.file }}
          