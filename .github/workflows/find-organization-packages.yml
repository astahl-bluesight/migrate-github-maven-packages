# This workflow will create a list of all Maven packages for the specified Organization
# 1. The workflow will trigger either by a workflow_dispacth even or by the creation of an issue with the label "get-maven-packages"
# 2. It will use the GitHub CLI to access the GitHub API and get a list of all Maven packages
# 3. It will use the repository secret FROM_ORG_PAT to access the GitHub API

name: Get Maven Packages

on:
    workflow_dispatch:
      inputs:
        from-org:
          description: 'GitHub Organization where the package is stored'
          required: true
          default: 'octodemo'
        to-org:
          description: 'Name of GitHub Organization where the package should be copied'
          required: true
          default: 'thedave42-org'
  
jobs:
  get-packages:
    runs-on: ubuntu-latest

    outputs:
      packages: ${{ steps.org-packages.outputs.packages }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Get Maven Packages
        uses: ./.github/actions/create-asset-download-lists-by-package
        id: org-packages
        with:
          from-org: ${{ github.event.inputs.from-org }}
          from-org-pat: ${{ secrets.FROM_ORG_PAT }}
          to-org: ${{ github.events.inputs.to-org}}
          to-org-pat: ${{ secrets.TO_ORG_PAT }}

      - name: Add JSON files to cache
        uses: actions/cache@v4.0.1
        with:
          key: |
            ${{ github.workflow }}-${{ github.run_id }}-${{ github.run_attempt }}-json
          path: |
            *.json
          save-always: true
          
      - name: Add list to job summary
        run: |
          echo "Maven Packages" >> $GITHUB_STEP_SUMMARY
          echo "-------------" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.org-packages.outputs.packages }}" >> $GITHUB_STEP_SUMMARY
  
  upload-assets:
    needs: get-packages
    runs-on: ubuntu-latest

    strategy:
        matrix:
          pkg: ${{fromJson(needs.get-packages.outputs.packages)}}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # retrieve cache
      - name: Restore JSON files from cache
        uses: actions/cache@v4.0.1
        with:
          key: |
            ${{ github.workflow }}-${{ github.run_id }}-${{ github.run_attempt }}-json
          path: |
            *.json
          fail-on-cache-miss: true
            
      - name: Read package ${{ matrix.pkg.name }} 
        run: |
          echo "Ready to migrate: ${{ matrix.pkg.toOwnerRepoExists }}"
          echo "Reading from file ${{ matrix.pkg.file }}"
          cat ${{ matrix.pkg.file }}
    